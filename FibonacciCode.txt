------------ C code ------------------

int one = 0; // r1 
int two = 1; // r2 
int sum; // r3 

for (int i = 0; i < 10; i = i + 1) { 
	sum = one + two; 
	one = two; 
	two = sum; 
}

return sum; 

------------ assembly code ------------

x0000.0000 addi r2, r2, #1 // int two = 1;  
x0000.0004 addi r4, r4, #10 // used in our for loop to compare to 
x0000.0008 addi r5, r5, #1 // to subtract from r4 

x0000.000C add r3, r1, r2 // sum = one + two
x0000.0010 add r1, r0, r2 // one = two 
x0000.0014 add r2, r0, r3 // two = sum 

x0000.0018 sub r4, r4, r5 // (in theory: i++) 
x0000.001C bne r4, r0, #(-16) // if r4 != 0, then take the branch back to the beginning 

------------ machine code ------------- (NOTE: IN BINARY!) 

000000000001 00010 000 00010 0010011
000000001010 00100 000 00100 0010011 
000000000001 00101 000 00101 0010011 

0000000 00010 00001 000 00011 0110011
0000000 00010 00000 000 00001 0110011 
0000000 00011 00000 000 00010 0110011 

0100000 00101 00100 000 00100 0110011 
1111110 00100 00000 001 00001 1100011 
